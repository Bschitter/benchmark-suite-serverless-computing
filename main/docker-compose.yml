version: '3.3'

services:
  aws-cli:
    image: mikesir87/aws-cli:1.16.310
    container_name: aws-cli

  azure-cli:
    image: mcr.microsoft.com/azure-cli:2.0.78
    container_name: azure-cli

  google-cli:
    image: google/cloud-sdk:274.0.1-alpine
    container_name: google-cli

  ibm-cli:
    image: ibmcom/ibm-cloud-developer-tools-amd64:0.20.0
    container_name: ibm-cli

  alpine-zip:
    image: bschitter/alpine-with-zip:0.1
    container_name: alpine-zip

  alpine-wrl2:
    image: bschitter/alpine-with-wrk2:0.1
    container_name: alpine-wrk2

  node:
    image: node:10.16.2-alpine
    container_name: node

  golang:
    image: golang:1.11-stretch
    container_name: golang

  dotnet:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine3.10
    container_name: dotnet

  dotnet2.1:
    image: mcr.microsoft.com/dotnet/core/sdk:2.1-alpine3.10
    container_name: dotnet2.1

  db:
    image: influxdb:1.7.7-alpine
    container_name: influxdb
    env_file:
      - env.influx
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    network_mode: "host"
    volumes:
      - influx:/var/lib/influxdb

  grafana:
    image: grafana/grafana:6.3.2
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - env.grafana
    network_mode: "host"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  app:
    build: .
    image: bschitter/benchmark-suite-serverless-computing:0.1
    container_name: app
    depends_on:
      - db
      - grafana
    ports:
      - "3001:3001"
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  influx:
